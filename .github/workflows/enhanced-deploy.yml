name: 🛸 UFO Invasions Enhanced Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Generate lockfile if missing
        run: |
          if [ ! -f "package-lock.json" ]; then
            echo "📝 Generating package-lock.json..."
            npm install --package-lock-only
          fi

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 TypeScript check
        run: npm run type-check

      - name: 🧹 Lint check
        run: npm run lint

      - name: 🏗️ Build check
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/ufo_invasions_test' }}
          NEXT_PUBLIC_BSC_RPC: https://bsc-dataseed.binance.org/
          NEXT_PUBLIC_CONTRACT_ADDRESS: "0x7650a9c4543473cb0d1c73de441360bb92374444"

      - name: 🧪 Run tests
        run: npm run test
        continue-on-error: true

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Generate lockfile if missing
        run: |
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Run security audit
        run: npm audit --audit-level high
        continue-on-error: true

      - name: 🕵️ CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          
      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        continue-on-error: true

  deploy-preview:
    name: 🌐 Deploy Preview
    if: github.event_name == 'pull_request'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Generate lockfile if missing
        run: |
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          NEXT_PUBLIC_BSC_RPC: ${{ vars.NEXT_PUBLIC_BSC_RPC || 'https://bsc-dataseed.binance.org/' }}
          NEXT_PUBLIC_CONTRACT_ADDRESS: ${{ vars.NEXT_PUBLIC_CONTRACT_ADDRESS || '0x7650a9c4543473cb0d1c73de441360bb92374444' }}

      - name: 🚀 Deploy Preview to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

  deploy-production:
    name: 🚀 Production Deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Generate lockfile if missing
        run: |
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          NEXT_PUBLIC_BSC_RPC: ${{ secrets.NEXT_PUBLIC_BSC_RPC || 'https://bsc-dataseed.binance.org/' }}
          NEXT_PUBLIC_CONTRACT_ADDRESS: ${{ secrets.NEXT_PUBLIC_CONTRACT_ADDRESS || '0x7650a9c4543473cb0d1c73de441360bb92374444' }}

      - name: 🚀 Deploy to Production Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      - name: 🏥 Health check
        run: |
          sleep 30
          curl -f https://ufo-invasions-pump-tokens.vercel.app/api/health || echo "Health check failed, continuing..."
        continue-on-error: true

      - name: 🌱 Initialize database
        run: |
          if [ -f "scripts/init-mvp-database.js" ]; then
            npm run db:init
          else
            echo "Database init script not found, skipping..."
          fi
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        continue-on-error: true

      - name: 📢 Notify success
        if: success()
        run: |
          echo "🎉 UFO Invasions Deployment Complete!"
          echo "Frontend: https://ufo-invasions-pump-tokens.vercel.app"
          echo "Version: ${{ github.sha }}"
